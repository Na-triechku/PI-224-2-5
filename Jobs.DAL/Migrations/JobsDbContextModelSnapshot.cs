// <auto-generated />
using System;
using Jobs.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jobs.DAL.Migrations
{
    [DbContext(typeof(JobsDbContext))]
    partial class JobsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Jobs.DAL.Entities.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("ExpectedSalary")
                        .HasColumnType("float")
                        .HasColumnName("ExpectedSalary");

                    b.Property<int>("Experience")
                        .HasColumnType("int")
                        .HasColumnName("Experience");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Position");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Skills");

                    b.HasKey("Id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("Jobs.DAL.Entities.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CVId")
                        .HasColumnType("int")
                        .HasColumnName("CVId");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit")
                        .HasColumnName("IsAccepted");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int")
                        .HasColumnName("VacancyId");

                    b.HasKey("Id");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("Jobs.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsLogged")
                        .HasColumnType("bit")
                        .HasColumnName("IsLogged");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "administrator@mail.com",
                            IsLogged = true,
                            PasswordHash = "CF-83-5D-E3-D4-EA-01-36-7C-45-E4-12-E7-A9-39-3A-85-A4-E4-0A-F1-49-ED-8C-3E-D6-C3-7C-05-B6-7B-27-81-3D-7F-F8-07-2C-10-35-CE-DD-19-41-5A-DF-17-12-8D-63-18-6F-05-F0-D6-56-00-2B-0C-A1-C3-4F-44-A0",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Email = "recruiter@mail.com",
                            IsLogged = false,
                            PasswordHash = "C5-C8-DE-47-3B-78-8E-10-7E-89-F3-17-F3-3F-D5-C7-86-97-C5-AB-2F-C4-AC-1C-F0-44-DB-E4-15-CC-28-03-95-6E-E5-91-CF-4B-8E-27-D2-D1-7E-DA-D1-18-01-F7-F7-91-85-79-A8-B5-DE-E5-24-E8-29-03-BE-C1-87-CE",
                            Role = "Recruiter"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user@mail.com",
                            IsLogged = false,
                            PasswordHash = "B1-43-61-40-4C-07-8F-FD-54-9C-03-DB-44-3C-3F-ED-E2-F3-E5-34-D7-3F-78-F7-73-01-ED-97-D4-A4-36-A9-FD-9D-B0-5E-E8-B3-25-C0-AD-36-43-8B-43-FE-C8-51-0C-20-4F-C1-C1-ED-B2-1D-09-41-C0-0E-9E-2C-1C-E2",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Jobs.DAL.Entities.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Position");

                    b.Property<int>("RequiredExperience")
                        .HasColumnType("int")
                        .HasColumnName("RequiredExperience");

                    b.Property<string>("RequiredSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RequiredSkills");

                    b.Property<double>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("Salary");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = ".Net Traineeship",
                            Position = "Trainee software engineer",
                            RequiredExperience = 0,
                            RequiredSkills = ".Net, C#, OOP, SQL",
                            Salary = 400.0,
                            StartDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Name = ".Net Junior",
                            Position = "Junior software engineer",
                            RequiredExperience = 1,
                            RequiredSkills = ".Net, C#, OOP, SQL, ASP.NET, .Net Core, React",
                            Salary = 800.0,
                            StartDate = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
